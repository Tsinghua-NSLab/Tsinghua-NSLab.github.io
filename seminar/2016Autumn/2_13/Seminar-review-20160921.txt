Overview[edit]Title:￼ BitCuts: A Fast Packet Classification Algorithm Using Bit-Level Cuts
Attendee: Jun Li, Yibo Xue, Qing Lv, Shuo Wang, Dongfang Li, Jun Yang, Danyang Li, Shijie Sun, Zhe Fu, Zhi Liu
Speaker: Zhi Liu
Recorder: Zhe Fu
Presentation[edit] Problem Model
 Header fields
 Typical rules
 Policies regarding an application to a number of hosts in certain subnet
 Policies regarding to different applications of the same host pair
 Packet Classification
 Two Stages
 Pre-processing
 Metrics
 Speed: required # of memory access on resulting data structure
 Space: memory size of resulting data structure
 Preprocessingtime
 Update support
 Online Classification
 Metrics
 Throughput in pps (packet per second)
 Throughput in bps (bit per second), with 64-Byte packet
 Typical techniques
 Hardware: TCAM
 Software: Decision-trees
 Geometrical methods
 E.g. HiCuts, HyperCuts, HyperSplit, ABC
 Grouping
 EffiCuts, RFG
 TCAM
 Pros:
 Time: O(1), Space: O(n)
 Cons:
 Power consumption, size, scalability
 Decision Tree Algorithms
 Overview
 Geometric view of rules, D-dimensional hyper-cube
 Recursively divide the space to reduce the potential matches
 Performance
 Fast online classification speed
 Support a moderate rate of randomized updates
 Categories
 Equal-sized Cuts
 Equal-dense Cuts
 HiCuts
 HyperCuts
 In each node, simultaneously cut multiple fields to reduce the tree depth
 HyperSplit
 Equal-dense Cuts
 Equal-sized Cuts
 High fanout -> Low tree depth   High memory consumption
 Equal-dense Cuts
 Low fanout -> High tree depth   Low memory consumption
 Bitcut
 Insight: Rule Distribution
 Contribution:
 Proposed new cutting scheme: “Bit-level” cut
 Proposed decision-tree building using our bit selection algorithm
 Accelerate the bit indexing by BMI instructions   
 Results
 BitCuts achieves about 1.8x - 2.1x the throughput of typical algorithms (HyperCuts and HyperSplit)
 Only 7% the memory consumption of HyperCuts; close to algorithms with memory usage optimizationDiscussion[edit] Zhe: Is Hypercut the same as Hicut when always cutting one dimension?
 Zhi: Yes, but the space factor in Hypercut is different from Hicut. Zhe: Are there any methods to optimize the tree after the tree is generated?
 Zhi: There are some work to compress the duplicated nodes. However, it is a tradeoff between space and time. Jun: Is there any difference that reduce one bit first and then another?
 Zhe: It is a greedy algorithm, not the optimal. Yibo: Does the Bit Manipulating Instruction dominates the performance improvement?
 Zhe: No experiment now, but I think the performance would be very poor without BMI. Yibo: What’s the difference between Bitcut and D2BS?
 Zhi: D2BS uses 1-level bit split, and uses heuristic information. Bitcut takes advantage of a evaluating indicator to select bits. Jun: The rulesets are two old, we need to test whether it also works well for random rules or other cases.