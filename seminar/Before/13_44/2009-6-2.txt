Topic: An improved DFA for fast regular expression matching
Speaker: Xiang Wang
Attendants: Prof. Li, Prof. Xue, Zhen Chen, Jin Zhou, Fachao Deng, Ying Zhang, Jian Du, Yiyao Wu, Guodong Li, Baohua Yang, Fei He, Guangyu Zhou, Xinming Chen, Hui Zhang, Zhiming Zhang, Chunlu Yan, Lianghong Xu, Li Tang
Recorder: Li Tang
Focus of this paper: Optimization of DFA on both memory saving and fast matching
The content of the paper
<1>Delta Finite Automata: A new representation for DFA which can be orthogonal to previous solutions
Most transition set of adjacent states share the majority of transitions
Bring delta-encoding to DFA
We can store differences of “parent-child” states transition sets
The last transition set is kept in local memory
Single memory access at a cost of a small local memory to remember last transition set<2>Character-State Compression: an optimization of reducing transition size for single memory access
In most cases, the edges reaching a given state are labelled with the same character.
A consistent number of states in the DFA can be associated with a single character and can be referred to by using a "relative" address
Encode each state by a very limited number of bits
The C-S can be easily integrated within the δFA scheme and both algorithms can be cross-optimized<3>Packet Classification with Delta Finite Automata:
Compared with the standard classification algorithms, δFA requires for the lookup the least number of memory accesses in the worst case for all test filter sets, but a very remarkable memory consumption.
Discussion:
1. 保华：论文中是否有例子，把DFA应用到包分类中。
Three filters provided by ISP and network equipment endors are chosen for performance evaluation: an access control list, a NAT list for a firewall and a decision tree format list for IP Chain. Each rule is translated into a regular expression and an equivalent DFA is built for testing. Results show that Delta Finite Automaton requires for the lookup the least number of memory accesses in the worst case for all filter sets, but a very remarkable memory consumption. 
2. 亚煊：核心思想什么？
Bring the delta-encoding to DFA to only store differences of "parent-child" states transition sets. Besides, in order to reduce the transition size, character-state compression is proposed for generating the "relative id" which can be stored in the state with a very limited number of bits, indicating the transition. 
3. 保华：具体是怎样表示节点之间的变化和区别的？
A delta FA state is stored as a variable-length structure. In its most general form, it is composed by a 256 bit-long bitmap (specifying which valid transition are already stored in the local transition set and which ones are instead stored within the state) and a list of the pointers for the specified transitions, which, again, can be considered as 20-bit offset values. If the number of specified transitions within a state is small enough, the state can be composed by a plain list of character-pointer couples.
4. 李老师： 进入同一状态的入边大多数都是相同的，这种前提是否成立？
According to the author's testing results, for different available data sets, the percentage of nodes which are reached only by transitions corresponding to a single character over the total number of nodes is 78% ~ 96%.
5. 何飞： 实验结果中的C-S是什么意思？
Character-State (C-S) compression is applied to delta FA.
6. 李老师： 是否证明了启发信息的正确性？如果启发信息不对，则不能这样进行编码。
亚煊： 启发信息应该正确，因为状态本身的变化就比较小。
7. 李老师： 存在这种规律的潜在原因是什么？
吴亦尧： 大多数攻击中只涉及到少数字符。
李老师： 这是不是攻击中存在的特点，正则表达式应用到其他领域是否仍然存在这样的特点？
8. 李老师： 正则表达式还主要在其他哪些领域有广泛应用？什么条件导致了这种启发式特点的存在？
何飞：生物信息学中基因串匹配；其本身匹配的字符集就很有限。
保华： 与规则集中的正则表达式相关。出现这种情况是由于*或者+通配符的大量使用，且group（[A-Z]等）的使用较少。
